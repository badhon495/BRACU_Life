# -*- coding: utf-8 -*-
"""Matrix Calculation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1042FwGc021sMDaY_2vb5D7_3fNVmhmvd
"""

m1 = []  # Matrix 1
m2 = []  # Matrix 2


def addMatrix(A, B):
    C = []
    for row in range(len(A)):
        l = []
        for col in range(len(A[row])):
            l.append(A[row][col] + B[row][col])
        C.append(l)
    return C


def subsMatrix(A, B):
    C = []
    for row in range(len(A)):
        l = []
        for col in range(len(A[row])):
            l.append(A[row][col] - B[row][col])
        C.append(l)
    return C


# def multipyMatrix(A, B):
#     if len(A[0]) == len(B):
#         C = []
#         y = 0
#         for row in range(len(A)):
#             l = []
#             for col in range(len(A[row])):
#                 y += (A[row][col] + B[col][row])
#                 l.append(y)
#             C.append(l)
#         printMatrix(C)
#     else:
#         print("Cant print this")


def transpose(A):
    C = []
    for col in range(len(A[0])):
        l = []
        for row in range(len(A)):
            l.append(A[row][col])
        C.append(l)
    print(A)
    print(C)
    A = C
    return C


def takeRowColInput():
    row = int(input("Please enter the number of rows in the matrix:"))
    col = int(input("Please enter the number of columns in the matrix:"))
    matrixInitialization(m1, row, col)
    matrixInitialization(m2, row, col)
    printMatrix(m1)
    printMatrix(m2)


def matrixInitialization(m, row, col):
    for r in range(row):
        l = []
        for c in range(col):
            l.append(0)
        m.append(l)


def printMatrix(m):
    for row in range(len(m)):
        print("| ", end="")
        for col in range(len(m[row])):
            print(m[row][col], end=" ")
        print("|")
    print()


def takeMatrixInput(m):
    for row in range(len(m)):
        for col in range(len(m[row])):
            m[row][col] = int(input(f"Enter value for [{row},{col}] : "))
    printMatrix(m)


takeRowColInput()
takeMatrixInput(m1)
takeMatrixInput(m2)

add_res = addMatrix(m1, m2)
printMatrix(add_res)

subRes = subsMatrix(m1, m2)  # m1-m2
printMatrix(subRes)

# mulRes = multipyMatrix(m1, m2)  # m1*m2
# print(mulRes)

m1 = transpose(m1)
printMatrix(m1)

m2 = transpose(m2)
printMatrix(m2)